server:
  port: 8085

spring:
  application:
    name: spring-activiti
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://172.30.200.1:3308/activiti7?useUnicode=true&characterEncoding=utf-8&useSSL=false&nullCatalogMeansCurrent=true
    username: ENC(loVtybOBzLBqGi5Jvg6iMA==)
    password: ENC(Haq+RL2YGt46RA0C0azEDr+WM5N2IDoL)
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      connection-test-query: SELECT 1
  activiti:
    #设置流程引擎启动和关闭时数据库执行的策略
    #1.flase： 默认值。activiti在启动时，会对比数据库表中保存的版本，如果没有表或者版本不匹配，将抛出异常
    #2.true： activiti会对数据库中所有表进行更新操作。如果表不存在，则自动创建
    #3.create_drop： 在activiti启动时创建表，在关闭时删除表（必须手动关闭引擎，才能删除表）
    #4.drop-create： 在activiti启动时删除原来的旧表，然后在创建新表（不需要手动关闭引擎）
    database-schema-update: true
    #检测历史表是否存在,为true表示使用历史表，如果不配置，则工程启动后可以检查数据库，只建立了17张表，
    #历史表没有建立，则流程图及运行节点无法展示
    db-history-used: true
    #记录历史等级 对于历史数据，保存到何种粒度，Activiti提供了history-level属性对其进行配置。
    #history-level属性有点像log4j的日志输出级别，可配置的历史级别有none, activity, audit, full
    #1.none: 不保存任何的历史数据，因此，在流程执行过程中，这是最高效的。
    #2.activity: 级别高于none，保存流程实例与流程行为，其他数据不保存。
    #3.audit: 除activity级别会保存的数据外，还会保存全部的流程任务及其属性。audit为history的默认值。
    #4.full: 保存历史数据的最高级别，除了会保存audit级别的数据外，还会保存其他全部流程相关的细节数据，包括一些流程参数等。
    history-level: full
    #校验流程文件，默认校验resources下的processes文件夹里的流程文件
    check-process-definitions: false
    process-definition-location-prefix: classpath:/processes/

jasypt:
  encryptor:
#    algorithm: PBEWithMD5AndDES
#    password: EbfYkitulv73I2p0mXI50JMXoaxZTKJ0
    algorithm: ${jasypt_encryptor_algorithm}
    password: ${jasypt_encryptor_password}
    iv-generator-classname: org.jasypt.iv.NoIvGenerator